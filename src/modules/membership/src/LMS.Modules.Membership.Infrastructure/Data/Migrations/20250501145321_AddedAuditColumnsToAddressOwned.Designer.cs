// <auto-generated />
using System;
using LMS.Modules.Membership.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LMS.Modules.Membership.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MembershipDbContext))]
    [Migration("20250501145321_AddedAuditColumnsToAddressOwned")]
    partial class AddedAuditColumnsToAddressOwned
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("membership")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LMS.Modules.Membership.Domain.PatronAggregate.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid?>("PatronId")
                        .HasColumnType("uuid")
                        .HasColumnName("patron_id");

                    b.Property<DateTime>("created_on")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("modified_on")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PatronId");

                    b.ToTable("documents", "membership", t =>
                        {
                            t.HasCheckConstraint("ck_document_content_type", "content_type IN ('application/pdf', 'application/jpg', 'application/jpeg')");

                            t.HasCheckConstraint("ck_document_document_type", "document_type IN ('PersonalId', 'AcademicsId','AddressProof')");
                        });
                });

            modelBuilder.Entity("LMS.Modules.Membership.Domain.PatronAggregate.Patron", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("AccessId")
                        .HasColumnType("uuid")
                        .HasColumnName("access_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("gender");

                    b.Property<string>("KycStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("kyc_status");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("name");

                    b.Property<string>("PatronType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("patron_type");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("status");

                    b.Property<DateTime>("created_on")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("modified_on")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("patrons", "membership", t =>
                        {
                            t.HasCheckConstraint("ck_patrons_kyc_status", "kyc_status in ('Pending', 'InProgress', 'Completed', 'Failed')");

                            t.HasCheckConstraint("ck_patrons_patron_type", "patron_type in ('Regular', 'Research')");

                            t.HasCheckConstraint("ck_patrons_status", "status in ('Active', 'InActive')");
                        });
                });

            modelBuilder.Entity("LMS.Modules.Membership.Domain.PatronAggregate.Document", b =>
                {
                    b.HasOne("LMS.Modules.Membership.Domain.PatronAggregate.Patron", null)
                        .WithMany("Documents")
                        .HasForeignKey("PatronId");
                });

            modelBuilder.Entity("LMS.Modules.Membership.Domain.PatronAggregate.Patron", b =>
                {
                    b.OwnsOne("LMS.Modules.Membership.Domain.PatronAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PatronId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BuildingNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("building_number");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("city");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("country");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("state");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("character varying(300)")
                                .HasColumnName("street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("zip_code");

                            b1.Property<DateTime>("created_on")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("modified_on")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("PatronId");

                            b1.ToTable("patrons", "membership");

                            b1.WithOwner()
                                .HasForeignKey("PatronId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.Modules.Membership.Domain.PatronAggregate.Patron", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
